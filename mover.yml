---
- name: Backup e envio de arquivos via SCP
  hosts: localhost
  connection: local
  become: false            # Evita uso de sudo/su no AWX container
  gather_facts: false      # Evita erro no módulo setup

  vars:
    destino: "/home/suporte/backup_envio"
    cert_dir: "/etc/pki/tls"
    rede_dir: "/etc/sysconfig/network-scripts"
    backup_dir: "/var/uscallbackup"
    codec_path: "/usr/lib64/asterisk/modules/codec_g729.so"

  tasks:
    - name: Verifica se sshpass está instalado
      shell: command -v sshpass
      register: sshpass_check
      failed_when: sshpass_check.rc != 0

    - name: Cria diretório de destino
      file:
        path: "{{ destino }}"
        state: directory
        mode: '0755'

    - name: Descobre o último arquivo de backup
      shell: "ls -t {{ backup_dir }} | head -n 1"
      register: ultimo_backup
      changed_when: false
      failed_when: false

    - name: Copia o último backup (se existir)
      copy:
        src: "{{ backup_dir }}/{{ ultimo_backup.stdout }}"
        dest: "{{ destino }}/"
        remote_src: yes
      when: ultimo_backup.stdout != ""

    - name: Copia arquivos de rede ifcfg-*
      shell: cp {{ rede_dir }}/ifcfg-* {{ destino }}/ 2>/dev/null || true

    - name: Copia arquivos de rota route-*
      shell: cp {{ rede_dir }}/route-* {{ destino }}/ 2>/dev/null || true

    - name: Copia certificado SSL
      copy:
        src: "{{ cert_dir }}/certs/localhost.crt"
        dest: "{{ destino }}/"
        remote_src: yes
      ignore_errors: true

    - name: Copia chave privada SSL
      copy:
        src: "{{ cert_dir }}/private/localhost.key"
        dest: "{{ destino }}/"
        remote_src: yes
      ignore_errors: true

    - name: Copia codec G.729 se existir
      copy:
        src: "{{ codec_path }}"
        dest: "{{ destino }}/"
        remote_src: yes
      ignore_errors: true

    - name: Envia arquivos via SCP usando sshpass
      command: >
        sshpass -p {{ senha_remoto }}
        scp -P 8222 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
        -r {{ destino }}
        {{ usuario_remoto }}@{{ ip_destino }}:/home/{{ usuario_remoto }}/
      register: envio_result
      changed_when: "'100%' in envio_result.stdout or envio_result.rc == 0"

    - name: Mostra resultado do envio
      debug:
        msg: >
          {% if envio_result.rc == 0 %}
            [✓] Envio finalizado com sucesso!
          {% else %}
            [X] Falha no envio via SCP.
          {% endif %}
